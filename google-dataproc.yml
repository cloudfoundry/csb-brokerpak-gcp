version: 1
name: csb-google-dataproc
id: ebb35d15-8c7a-4c4e-8aa8-d8d751a9d8d3
description: Beta - Dataproc is a fully-managed service for running Apache Spark and Apache Hadoop clusters in a simpler, more cost-efficient way.
display_name: Google Cloud Dataproc (Beta)
image_url: https://cloud.google.com/_static/images/cloud/products/logos/svg/dataproc.svg
documentation_url: https://cloud.google.com/dataproc/docs
support_url: https://cloud.google.com/dataproc/docs/support/getting-support
tags: [gcp, dataproc, beta]
plans:
- id: ed8c2ad0-edc7-4f36-a332-fd63d81ec276
  name: standard
  display_name: Standard (Beta - 1 master, N workers)
  description: Beta - Basic plan with 1 master and N workers.
  properties:
- id: 71cc321b-3ba3-4f0f-b058-90cfc978e743
  name: ha
  display_name: High Availability (Beta - 3 masters, N workers)
  description: Beta - High availability plan with 3 masters and N workers.
  properties:
    master_count: 3
provision:
  user_inputs:
  - default: n1-standard-2
    field_name: worker_machine_type
    type: string
    details: 'The name of a Google Compute Engine machine type to create for the worker(s).'
  - default: 2
    field_name: worker_count
    type: integer
    details: 'Specifies the number of worker nodes to create.'
  - default: n1-standard-2
    field_name: master_machine_type
    type: string
    details: 'The name of a Google Compute Engine machine type to create for the master(s).'
  - default: 1
    field_name: master_count
    type: integer
    details: 'Specifies the number of master nodes to create.'
  - default: 0
    field_name: preemptible_count
    type: integer
    details: 'Specifies the number of preemptible nodes to create. This is independent of the worker count and will be the type specified by `worker_machine_type`.'
  - field_name: name
    type: string
    details: The name of the cluster.
    default: csb-dataproc-${request.instance_id}
    constraints:
      maxLength: 222
      minLength: 3
      pattern: ^[a-z0-9-\.]+$
  - field_name: region
    type: string
    details: 'The region in which the cluster and associated nodes will be created in.'
    default: 'us-central1'
    constraints:
      examples:
        - us-central1
        - asia-northeast1
      pattern: ^[a-z][a-z0-9-]+$
  - field_name: credentials
    type: string
    details: GCP credentials
    default: ${config("gcp.credentials")}
  - field_name: project
    type: string
    details: GCP project
    default: ${config("gcp.project")}
  computed_inputs:
  - name: labels
    default: ${json.marshal(request.default_labels)}
    overwrite: true
    type: object
  template_refs:
    provider: terraform/dataproc/provision/provider.tf
    versions: terraform/dataproc/provision/versions.tf
    main: terraform/dataproc/provision/main.tf
    variables: terraform/dataproc/provision/variables.tf
    outputs: terraform/dataproc/provision/outputs.tf
  outputs:
  - field_name: bucket_name
    type: string
    details: Name of the bucket used for staging jobs.
  - field_name: cluster_name
    type: string
    details: The name of the Dataproc cluster.
  - field_name: region
    type: string
    details: The GCP region of the Dataproc cluster.
bind:
  plan_inputs: []
  user_inputs:
  - field_name: project
    type: string
    details: GCP project
    default: ${config("gcp.project")}
  computed_inputs:
  - name: service_account_name
    default: ${str.truncate(20, "pcf-binding-${request.binding_id}")}
    overwrite: true
  - name: bucket
    default: ${instance.details["bucket_name"]}
    overwrite: true
  template_refs:
    main: terraform/dataproc/bind/main.tf
    variables: terraform/dataproc/bind/variables.tf
    outputs: terraform/dataproc/bind/outputs.tf
  outputs:
  - field_name: email
    type: string
    details: Email address of the service account.
  - field_name: private_key
    type: string
    details: Service account private key data. Base64 encoded JSON.
  - field_name: project_id
    type: string
    details: ID of the project that owns the service account.
  - field_name: name
    type: string
    details: Name of service account
examples:
- name: basic
  description: Create a standard Dataproc cluster with a service account that can kick off jobs (roles/dataproc.editor) and has objectAdmin access to the bucket that's created.
  plan_id: ed8c2ad0-edc7-4f36-a332-fd63d81ec276
  provision_params: {}
  bind_params: {}
- name: ha
  description: Create a HA Dataproc cluster with a service account that can kick off jobs (roles/dataproc.editor) and has objectAdmin access to the bucket that's created.
  plan_id: 71cc321b-3ba3-4f0f-b058-90cfc978e743
  provision_params: {}
  bind_params: {}
